// Generated from "localclasswithconstructor/LocalClassWithConstructor.java"
@file:OptIn(ExperimentalObjCName::class)

package localclasswithconstructor

import javaemul.lang.*
import kotlin.Int
import kotlin.OptIn
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmField
import kotlin.native.ObjCName

@ObjCName("LocalclasswithconstructorLocalClassWithConstructor", exact = true)
open class LocalClassWithConstructor {
 open fun test(
  @ObjCName("withInt", exact = false) p: Int
 ) {
  val localVar: Int = 1
  open class ___1LocalClass {
   @JvmField var field: Int = 0

   constructor(
    @ObjCName("Int", exact = false) a: Int,
    @ObjCName("withInt", exact = false) b: Int
   ) {
    this.field = localVar + a + b
   }

   constructor(
    @ObjCName("Int", exact = false) a: Int
   ): this(a, p) {
    this.field = localVar
   }
  }
  ___1LocalClass(1)
 }
}
