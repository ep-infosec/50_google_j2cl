// Generated from "jsinnerclass/Main.java"
@file:OptIn(ExperimentalObjCName::class)

package jsinnerclass

import javaemul.lang.*
import jsinnerclass.Main
import kotlin.Array
import kotlin.Int
import kotlin.OptIn
import kotlin.String
import kotlin.assert
import kotlin.experimental.ExperimentalObjCName
import kotlin.jvm.JvmField
import kotlin.jvm.JvmStatic
import kotlin.native.ObjCName

@ObjCName("JsinnerclassMain", exact = true)
open class Main {
 companion object {
  @JvmStatic
  fun main(
   vararg @ObjCName("withNSStringArray", exact = false) args: String?
  ) {
   val args_1: Array<String?>? = args as Array<String?>?
   assert(Main.Outer().method() == 5)
  }
 }

 open class Outer {
  @JvmField var a_pp_jsinnerclass: Int = 2

  open fun method(): Int {
   return Inner().getB() + this.a_pp_jsinnerclass
  }

  @ObjCName("JsinnerclassMain_Outer_Inner", exact = true)
  open inner class Inner {
   @JvmField var b_private_2: Int = 0

   constructor() {
    this.b_private_2 = this@Outer.a_pp_jsinnerclass + 1
   }

   open fun getB(): Int {
    return this.b_private_2
   }
  }
 }
}
