goog.module('jsmethod.JsMethodExample.Sub$impl');

const Base = goog.require('jsmethod.JsMethodExample.Base$impl');
const I = goog.require('jsmethod.JsMethodExample.I$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

/**
 * @extends {Base<?string>}
 * @implements {I}
 */
class Sub extends Base {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts @return {!Sub} */
 static $create__() {
  Sub.$clinit();
  let $instance = new Sub();
  $instance.$ctor__jsmethod_JsMethodExample_Sub__void();
  return $instance;
 }
 /** @nodts */
 $ctor__jsmethod_JsMethodExample_Sub__void() {
  this.$ctor__jsmethod_JsMethodExample_Base__void();
 }
 /** @override */
 m(/** ?string */ s) {}
 /** @nodts */
 static $clinit() {
  Sub.$clinit = () =>{};
  Sub.$loadModules();
  Base.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof Sub;
 }
 
 /** @nodts */
 static $loadModules() {}
}
I.$markImplementor(Sub);
$Util.$setClassMetadata(Sub, 'jsmethod.JsMethodExample$Sub');

exports = Sub;

//# sourceMappingURL=JsMethodExample$Sub.js.map
