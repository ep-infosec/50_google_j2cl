;;; Code for equality.Equality [static fields]
(global $f_$initialized__equality_Equality (mut i32) (i32.const 0))

;;; Code for equality.Equality [vtable.init]
(global $equality.Equality.vtable (ref $equality.Equality.vtable) 
 (struct.new $equality.Equality.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@equality.Equality)
  (ref.func $m_test__void@equality.Equality)
 )
)

;;; Code for equality.Equality [itable.init]
(global $equality.Equality.itable (ref $equality.Equality.itable) (struct.new $equality.Equality.itable 
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
 ))

;;; Code for equality.Equality [CLASS]
(type $equality.Equality (struct_subtype 
 (field $vtable (ref $equality.Equality.vtable)) 
 (field $itable (ref $equality.Equality.itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
  $java.lang.Object)
)
(type $equality.Equality.vtable (struct_subtype 
 (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
 (field $m_hashCode__int (ref $function.m_hashCode__int))
 (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
 (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
 (field $m_test__void (ref $function.m_test__void))
  $java.lang.Object.vtable)
)
(type $equality.Equality.itable (struct_subtype 
(field $slot0 (ref null struct))
(field $slot1 (ref null struct))
(field $slot2 (ref null struct))
(field $slot3 (ref null struct))
(field $slot4 (ref null struct))
(field $slot5 (ref null struct))
(field $slot6 (ref null struct))
 $java.lang.Object.itable))

;;; Equality Equality.$create()
(func $$create__@equality.Equality
 (result (ref null $equality.Equality))
 ;;@ equality/Equality.java:18:13
 (local $$instance (ref null $equality.Equality))
 (block
  ;; Equality $instance = new Equality.<init>(0);
  ;;@ equality/Equality.java:18:13
  (local.set $$instance (struct.new $equality.Equality (ref.as_non_null (global.get $equality.Equality.vtable)) (ref.as_non_null (global.get $equality.Equality.itable)) (i32.const 0)))
  ;; $instance.$ctor();
  ;;@ equality/Equality.java:18:13
  (call $$ctor__void_$p_equality_Equality@equality.Equality (ref.as_non_null (local.get $$instance)))
  ;; return $instance;
  ;;@ equality/Equality.java:18:13
  (return (local.get $$instance))
 )
)

;;; void Equality.$ctor()
(func $$ctor__void_$p_equality_Equality@equality.Equality
 (param $this (ref null $equality.Equality))
 ;;@ equality/Equality.java:18:13
 (block
  ;; equality.Equality.$clinit();
  ;;@ equality/Equality.java:18:13
  (call $$clinit__void@equality.Equality )
  ;; Object.this.$ctor();
  ;;@ equality/Equality.java:18:13
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (ref.as_non_null (local.get $this)))
 )
)

;;; void Equality.test()
(func $m_test__void@equality.Equality
 (type $function.m_test__void)
 (param $this.untyped (ref $java.lang.Object))
 ;;@ equality/Equality.java:19:14
 (local $a i32)
 (local $b i32)
 (local $c i32)
 (local $d i32)
 (local $e i32)
 (local $f i32)
 (local $g i32)
 (local $h i32)
 (local $this (ref null $equality.Equality))
 (local.set $this (ref.cast_static $equality.Equality (local.get $this.untyped)))
 (block
  (block
   ;; boolean a = (false == false);
   ;;@ equality/Equality.java:22:6
   (local.set $a (i32.eq (i32.const 0) (i32.const 0)))
   ;; boolean b = (0 != 1);
   ;;@ equality/Equality.java:23:6
   (local.set $b (i32.ne (i32.const 0) (i32.const 1)))
  )
  (block
   ;; boolean c = !(java.lang.Object.$create() == java.lang.Object.$create());
   ;;@ equality/Equality.java:28:6
   (local.set $c (i32.eqz (ref.eq (call $$create__@java.lang.Object ) (call $$create__@java.lang.Object ))))
  )
  (block
   ;; boolean d = (java.lang.Double.valueOf(0.0) == java.lang.Double.valueOf(0.0));
   ;;@ equality/Equality.java:33:6
   (local.set $d (ref.eq (call $m_valueOf__double__java_lang_Double@java.lang.Double (f64.const 0.0)) (call $m_valueOf__double__java_lang_Double@java.lang.Double (f64.const 0.0))))
  )
  (block
   ;; boolean e = (java.lang.Float.valueOf(0.0) == java.lang.Float.valueOf(0.0));
   ;;@ equality/Equality.java:38:6
   (local.set $e (ref.eq (call $m_valueOf__float__java_lang_Float@java.lang.Float (f32.const 0.0)) (call $m_valueOf__float__java_lang_Float@java.lang.Float (f32.const 0.0))))
  )
  (block
   ;; boolean f = !javaemul.internal.Platform.isNull(java.lang.Object.$create());
   ;;@ equality/Equality.java:43:6
   (local.set $f (i32.eqz (ref.is_null (call $$create__@java.lang.Object ))))
   ;; boolean g = !javaemul.internal.Platform.isNull(java.lang.Object.$create());
   ;;@ equality/Equality.java:44:6
   (local.set $g (i32.eqz (ref.is_null (call $$create__@java.lang.Object ))))
   ;; boolean h = !javaemul.internal.Platform.isNull(javaemul.internal.WasmArray.OfInt.$create(0));
   ;;@ equality/Equality.java:45:6
   (local.set $h (i32.eqz (ref.is_null (call $$create__int@javaemul.internal.WasmArray.OfInt (i32.const 0)))))
  )
 )
)
(elem declare func $m_test__void@equality.Equality)

;;; void Equality.$clinit()
(func $$clinit__void@equality.Equality
 ;;@ equality/Equality.java:18:13
 (block
  ;; if (equality.Equality.$initialized) return;
  ;;@ equality/Equality.java:18:13
  (if (global.get $f_$initialized__equality_Equality)
   (then
    ;; return;
    ;;@ equality/Equality.java:18:13
    (return )
   )
  )
  ;; (equality.Equality.$initialized = true);
  ;;@ equality/Equality.java:18:13
  (global.set $f_$initialized__equality_Equality (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ equality/Equality.java:18:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> Equality.getClass()
(func $m_getClass__java_lang_Class@equality.Equality
 (type $function.m_getClass__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $equality.Equality))
 (local.set $this (ref.cast_static $equality.Equality (local.get $this.untyped)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getEquality.Equality();
  (return (call $function.no.side.effects.$getEquality.Equality__java_lang_Class (ref.func $$getEquality.Equality__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@equality.Equality)
