goog.module('objcnamegeneric.Collection$impl');

const $Util = goog.require('nativebootstrap.Util$impl');

let $LambdaAdaptor = goog.forwardDeclare('objcnamegeneric.Collection.$LambdaAdaptor$impl');

/**
 * @interface
 * @template T
 */
class Collection {
 /** @abstract @nodts @return {boolean} */
 m_add__java_lang_Object__boolean(/** T */ element) {}
 /** @nodts @template T @return {Collection<T>} */
 static $adapt(/** ?function(T):boolean */ fn) {
  Collection.$clinit();
  return /**@type {!$LambdaAdaptor<T>}*/ (new $LambdaAdaptor(fn));
 }
 /** @nodts */
 static $clinit() {
  Collection.$clinit = () =>{};
  Collection.$loadModules();
 }
 
 static $markImplementor(/** Function */ ctor) {
  ctor.prototype.$implements__objcnamegeneric_Collection = true;
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance != null && !!instance.$implements__objcnamegeneric_Collection;
 }
 
 /** @nodts */
 static $loadModules() {
  $LambdaAdaptor = goog.module.get('objcnamegeneric.Collection.$LambdaAdaptor$impl');
 }
}
Collection.$markImplementor(/**@type {Function}*/ (Collection));
$Util.$setClassMetadataForInterface(Collection, 'objcnamegeneric.Collection');

exports = Collection;

//# sourceMappingURL=Collection.js.map
