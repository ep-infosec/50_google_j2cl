;;; Code for jsnullable.Main [static fields]
(global $f_$initialized__jsnullable_Main (mut i32) (i32.const 0))

;;; Code for jsnullable.Main [vtable.init]
(global $jsnullable.Main.vtable (ref $jsnullable.Main.vtable) 
 (struct.new $jsnullable.Main.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@jsnullable.Main)
 )
)

;;; Code for jsnullable.Main [itable.init]
(global $jsnullable.Main.itable (ref $jsnullable.Main.itable) (struct.new $jsnullable.Main.itable 
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
 ))

;;; Code for jsnullable.Main [CLASS]
(type $jsnullable.Main (struct_subtype 
 (field $vtable (ref $jsnullable.Main.vtable)) 
 (field $itable (ref $jsnullable.Main.itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
 (field $f_f1__jsnullable_Main_ (ref null $java.lang.String))
 (field $f_f2__jsnullable_Main_ (ref null $java.lang.String))
 (field $f_f4__jsnullable_Main_ (mut (ref null $java.lang.Object)))
 (field $f_f5__jsnullable_Main_ (mut (ref null $java.lang.Object)))
 (field $f_f6__jsnullable_Main_ (mut (ref null $java.lang.Object)))
 (field $f_f9__jsnullable_Main_ (ref null $javaemul.internal.WasmArray.OfObject))
 (field $f_f10__jsnullable_Main_ (ref null $javaemul.internal.WasmArray.OfObject))
  $java.lang.Object)
)
(type $jsnullable.Main.vtable (struct_subtype 
 (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
 (field $m_hashCode__int (ref $function.m_hashCode__int))
 (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
 (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
  $java.lang.Object.vtable)
)
(type $jsnullable.Main.itable (struct_subtype 
(field $slot0 (ref null struct))
(field $slot1 (ref null struct))
(field $slot2 (ref null struct))
(field $slot3 (ref null struct))
(field $slot4 (ref null struct))
(field $slot5 (ref null struct))
(field $slot6 (ref null struct))
 $java.lang.Object.itable))

;;; Main Main.$create()
(func $$create__@jsnullable.Main
 (result (ref null $jsnullable.Main))
 ;;@ jsnullable/Main.java:24:13
 (local $$instance (ref null $jsnullable.Main))
 (block
  ;; Main $instance = new Main.<init>(0,javaemul.internal.StringPool.$getString_|Hello|(),null,null,null,null,javaemul.internal.WasmArray.OfObject.$create([]),javaemul.internal.WasmArray.OfObject.$create([]));
  ;;@ jsnullable/Main.java:24:13
  (local.set $$instance (struct.new $jsnullable.Main (ref.as_non_null (global.get $jsnullable.Main.vtable)) (ref.as_non_null (global.get $jsnullable.Main.itable)) (i32.const 0) (call $function.no.side.effects.$getString_|Hello|__java_lang_String (ref.func $$getString_|Hello|__java_lang_String@javaemul.internal.StringPool) ) (ref.null $java.lang.String) (ref.null $java.lang.Object) (ref.null $java.lang.Object) (ref.null $java.lang.Object) (call $$create__arrayOf_java_lang_Object@javaemul.internal.WasmArray.OfObject (array.init_static $java.lang.Object.array )) (call $$create__arrayOf_java_lang_Object@javaemul.internal.WasmArray.OfObject (array.init_static $java.lang.Object.array ))))
  ;; $instance.$ctor();
  ;;@ jsnullable/Main.java:24:13
  (call $$ctor__void_$p_jsnullable_Main@jsnullable.Main (ref.as_non_null (local.get $$instance)))
  ;; return $instance;
  ;;@ jsnullable/Main.java:24:13
  (return (local.get $$instance))
 )
)

;;; void Main.$ctor()
(func $$ctor__void_$p_jsnullable_Main@jsnullable.Main
 (param $this (ref null $jsnullable.Main))
 ;;@ jsnullable/Main.java:24:13
 (block
  ;; jsnullable.Main.$clinit();
  ;;@ jsnullable/Main.java:24:13
  (call $$clinit__void@jsnullable.Main )
  ;; Object.this.$ctor();
  ;;@ jsnullable/Main.java:24:13
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (ref.as_non_null (local.get $this)))
  ;; Main.this.$init();
  ;;@ jsnullable/Main.java:24:13
  (call $$init__void_$p_jsnullable_Main@jsnullable.Main (ref.as_non_null (local.get $this)))
 )
)

;;; void Main.m(T t, T nullableT)
(func $m_m__java_lang_Object__java_lang_Object__void_$p_jsnullable_Main@jsnullable.Main
 (param $this (ref null $jsnullable.Main))
 (param $t (ref null $java.lang.Object))
 (param $nullableT (ref null $java.lang.Object))
 ;;@ jsnullable/Main.java:35:19
 (block
 )
)

;;; void Main.$init()
(func $$init__void_$p_jsnullable_Main@jsnullable.Main
 (param $this (ref null $jsnullable.Main))
 ;;@ jsnullable/Main.java:24:13
 (block
  ;; (Main.this.f4 = java.util.ArrayList.$create());
  ;;@ jsnullable/Main.java:27:2
  (struct.set $jsnullable.Main $f_f4__jsnullable_Main_(local.get $this) (call $$create__@java.util.ArrayList ))
  ;; (Main.this.f5 = java.util.ArrayList.$create());
  ;;@ jsnullable/Main.java:28:2
  (struct.set $jsnullable.Main $f_f5__jsnullable_Main_(local.get $this) (call $$create__@java.util.ArrayList ))
  ;; (Main.this.f6 = java.util.ArrayList.$create());
  ;;@ jsnullable/Main.java:29:2
  (struct.set $jsnullable.Main $f_f6__jsnullable_Main_(local.get $this) (call $$create__@java.util.ArrayList ))
 )
)

;;; void Main.$clinit()
(func $$clinit__void@jsnullable.Main
 ;;@ jsnullable/Main.java:24:13
 (block
  ;; if (jsnullable.Main.$initialized) return;
  ;;@ jsnullable/Main.java:24:13
  (if (global.get $f_$initialized__jsnullable_Main)
   (then
    ;; return;
    ;;@ jsnullable/Main.java:24:13
    (return )
   )
  )
  ;; (jsnullable.Main.$initialized = true);
  ;;@ jsnullable/Main.java:24:13
  (global.set $f_$initialized__jsnullable_Main (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ jsnullable/Main.java:24:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> Main.getClass()
(func $m_getClass__java_lang_Class@jsnullable.Main
 (type $function.m_getClass__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $jsnullable.Main))
 (local.set $this (ref.cast_static $jsnullable.Main (local.get $this.untyped)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getJsnullable.Main();
  (return (call $function.no.side.effects.$getJsnullable.Main__java_lang_Class (ref.func $$getJsnullable.Main__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@jsnullable.Main)
