goog.module('multipleabstractparents.MultipleAbstractParents.AbstractStringList$impl');

const AbstractList = goog.require('multipleabstractparents.MultipleAbstractParents.AbstractList$impl');
const IStringList = goog.require('multipleabstractparents.MultipleAbstractParents.IStringList$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let j_l_String = goog.forwardDeclare('java.lang.String$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');

/**
 * @abstract
 * @extends {AbstractList<?string>}
 * @implements {IStringList}
 */
class AbstractStringList extends AbstractList {
 /** @protected @nodts */
 constructor() {
  super();
 }
 /** @nodts */
 $ctor__multipleabstractparents_MultipleAbstractParents_AbstractStringList__void() {
  this.$ctor__multipleabstractparents_MultipleAbstractParents_AbstractList__void();
 }
 //Bridge method.
 /** @override @nodts @return {?string} */
 m_getFoo__java_lang_Object__java_lang_String(/** ?string */ arg0) {
  return this.m_getFoo__java_lang_String__java_lang_String(/**@type {?string}*/ ($Casts.$to(arg0, j_l_String)));
 }
 //Specialized bridge method.
 /** @override @nodts @return {?string} */
 m_getFoo__java_lang_String__java_lang_String(/** ?string */ arg0) {
  return super.m_getFoo__java_lang_Object__java_lang_String(arg0);
 }
 /** @nodts */
 static $clinit() {
  AbstractStringList.$clinit = () =>{};
  AbstractStringList.$loadModules();
  AbstractList.$clinit();
 }
 /** @nodts @return {boolean} */
 static $isInstance(/** ? */ instance) {
  return instance instanceof AbstractStringList;
 }
 
 /** @nodts */
 static $loadModules() {
  j_l_String = goog.module.get('java.lang.String$impl');
  $Casts = goog.module.get('vmbootstrap.Casts$impl');
 }
}
IStringList.$markImplementor(AbstractStringList);
$Util.$setClassMetadata(AbstractStringList, 'multipleabstractparents.MultipleAbstractParents$AbstractStringList');

exports = AbstractStringList;

//# sourceMappingURL=MultipleAbstractParents$AbstractStringList.js.map
