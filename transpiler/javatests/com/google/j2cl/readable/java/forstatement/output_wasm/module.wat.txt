;;; Code for forstatement.ForStatement [static fields]
(global $f_$initialized__forstatement_ForStatement (mut i32) (i32.const 0))

;;; Code for forstatement.ForStatement [vtable.init]
(global $forstatement.ForStatement.vtable (ref $forstatement.ForStatement.vtable) 
 (struct.new $forstatement.ForStatement.vtable
  (ref.func $m_equals__java_lang_Object__boolean@java.lang.Object)
  (ref.func $m_hashCode__int@java.lang.Object)
  (ref.func $m_toString__java_lang_String@java.lang.Object)
  (ref.func $m_getClass__java_lang_Class@forstatement.ForStatement)
  (ref.func $m_test__void@forstatement.ForStatement)
  (ref.func $m_testContinue__void@forstatement.ForStatement)
  (ref.func $m_testInitializeInForCondition__void@forstatement.ForStatement)
 )
)

;;; Code for forstatement.ForStatement [itable.init]
(global $forstatement.ForStatement.itable (ref $forstatement.ForStatement.itable) (struct.new $forstatement.ForStatement.itable 
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
  (ref.null struct)
 ))

;;; Code for forstatement.ForStatement [CLASS]
(type $forstatement.ForStatement (struct_subtype 
 (field $vtable (ref $forstatement.ForStatement.vtable)) 
 (field $itable (ref $forstatement.ForStatement.itable))
 (field $f_$systemIdentityHashCode__java_lang_Object (mut i32))
  $java.lang.Object)
)
(type $forstatement.ForStatement.vtable (struct_subtype 
 (field $m_equals__java_lang_Object__boolean (ref $function.m_equals__java_lang_Object__boolean))
 (field $m_hashCode__int (ref $function.m_hashCode__int))
 (field $m_toString__java_lang_String (ref $function.m_toString__java_lang_String))
 (field $m_getClass__java_lang_Class (ref $function.m_getClass__java_lang_Class))
 (field $m_test__void (ref $function.m_test__void))
 (field $m_testContinue__void (ref $function.m_testContinue__void))
 (field $m_testInitializeInForCondition__void (ref $function.m_testInitializeInForCondition__void))
  $java.lang.Object.vtable)
)
(type $forstatement.ForStatement.itable (struct_subtype 
(field $slot0 (ref null struct))
(field $slot1 (ref null struct))
(field $slot2 (ref null struct))
(field $slot3 (ref null struct))
(field $slot4 (ref null struct))
(field $slot5 (ref null struct))
(field $slot6 (ref null struct))
 $java.lang.Object.itable))

;;; ForStatement ForStatement.$create()
(func $$create__@forstatement.ForStatement
 (result (ref null $forstatement.ForStatement))
 ;;@ forstatement/ForStatement.java:18:13
 (local $$instance (ref null $forstatement.ForStatement))
 (block
  ;; ForStatement $instance = new ForStatement.<init>(0);
  ;;@ forstatement/ForStatement.java:18:13
  (local.set $$instance (struct.new $forstatement.ForStatement (ref.as_non_null (global.get $forstatement.ForStatement.vtable)) (ref.as_non_null (global.get $forstatement.ForStatement.itable)) (i32.const 0)))
  ;; $instance.$ctor();
  ;;@ forstatement/ForStatement.java:18:13
  (call $$ctor__void_$p_forstatement_ForStatement@forstatement.ForStatement (ref.as_non_null (local.get $$instance)))
  ;; return $instance;
  ;;@ forstatement/ForStatement.java:18:13
  (return (local.get $$instance))
 )
)

;;; void ForStatement.$ctor()
(func $$ctor__void_$p_forstatement_ForStatement@forstatement.ForStatement
 (param $this (ref null $forstatement.ForStatement))
 ;;@ forstatement/ForStatement.java:18:13
 (block
  ;; forstatement.ForStatement.$clinit();
  ;;@ forstatement/ForStatement.java:18:13
  (call $$clinit__void@forstatement.ForStatement )
  ;; Object.this.$ctor();
  ;;@ forstatement/ForStatement.java:18:13
  (call $$ctor__void_$p_java_lang_Object@java.lang.Object (ref.as_non_null (local.get $this)))
 )
)

;;; void ForStatement.test()
(func $m_test__void@forstatement.ForStatement
 (type $function.m_test__void)
 (param $this.untyped (ref $java.lang.Object))
 ;;@ forstatement/ForStatement.java:19:14
 (local $i i32)
 (local $count i32)
 (local $l i64)
 (local $count_1 i64)
 (local $a i32)
 (local $b i32)
 (local $this (ref null $forstatement.ForStatement))
 (local.set $this (ref.cast_static $forstatement.ForStatement (local.get $this.untyped)))
 (block
  ;; LOOP: for (int i = 0,int count = 0;(i < 100);(i = (i + 1))) {
  ;;@ forstatement/ForStatement.java:20:4
  (local.set $i (i32.const 0))
  (local.set $count (i32.const 0))
  (block $LOOP.BREAK
   (loop
    (br_if 1 (i32.eqz (i32.lt_s (local.get $i) (i32.const 100))))
    (block $LOOP.CONTINUE
     (block
      ;; (count = (count + 1));
      ;;@ forstatement/ForStatement.java:21:6
      (local.set $count (i32.add (local.get $count) (i32.const 1)))
     )
    )
    (local.set $i (i32.add (local.get $i) (i32.const 1)))
    (br 0)
    
   )
  )
  ;; LOOP: for (long l = 0,long count = 0;(l < 100);(l = (l + 1)),(l = (l + 1))) {
  ;;@ forstatement/ForStatement.java:24:4
  (local.set $l (i64.const 0))
  (local.set $count_1 (i64.const 0))
  (block $LOOP_1.BREAK
   (loop
    (br_if 1 (i32.eqz (i64.lt_s (local.get $l) (i64.const 100))))
    (block $LOOP_1.CONTINUE
     (block
      ;; (count = (count + 1));
      ;;@ forstatement/ForStatement.java:25:6
      (local.set $count_1 (i64.add (local.get $count_1) (i64.const 1)))
     )
    )
    (local.set $l (i64.add (local.get $l) (i64.const 1)))
    (local.set $l (i64.add (local.get $l) (i64.const 1)))
    (br 0)
    
   )
  )
  ;; boolean a = false;
  ;;@ forstatement/ForStatement.java:28:4
  (local.set $a (i32.const 0))
  ;; LOOP: for (;((a = (a | true)),a);) {
  ;;@ forstatement/ForStatement.java:29:4
  (block $LOOP_2.BREAK
   (loop
    (br_if 1 (i32.eqz (block (result i32)
     (local.set $a (i32.or (local.get $a) (i32.const 1)))
     (local.get $a)
    )))
    (block $LOOP_2.CONTINUE
     (block
     )
    )
    (br 0)
    
   )
  )
  ;; boolean b = false;
  ;;@ forstatement/ForStatement.java:31:4
  (local.set $b (i32.const 0))
  ;; LOOP: for (;((b = a),b);) {
  ;;@ forstatement/ForStatement.java:32:4
  (block $LOOP_3.BREAK
   (loop
    (br_if 1 (i32.eqz (block (result i32)
     (local.set $b (local.get $a))
     (local.get $b)
    )))
    (block $LOOP_3.CONTINUE
     (block
     )
    )
    (br 0)
    
   )
  )
  ;; LOOP: for (forstatement.ForStatement.returnsValue();true;forstatement.ForStatement.returnsValue()) {
  ;;@ forstatement/ForStatement.java:34:4
  (drop (call $m_returnsValue__int@forstatement.ForStatement ))
  (block $LOOP_4.BREAK
   (loop
    (block $LOOP_4.CONTINUE
     (block
     )
    )
    (drop (call $m_returnsValue__int@forstatement.ForStatement ))
    (br 0)
    
   )
  )
 )
)
(elem declare func $m_test__void@forstatement.ForStatement)

;;; void ForStatement.testContinue()
(func $m_testContinue__void@forstatement.ForStatement
 (type $function.m_testContinue__void)
 (param $this.untyped (ref $java.lang.Object))
 ;;@ forstatement/ForStatement.java:37:14
 (local $i i32)
 (local $j i32)
 (local $k i32)
 (local $l i32)
 (local $this (ref null $forstatement.ForStatement))
 (local.set $this (ref.cast_static $forstatement.ForStatement (local.get $this.untyped)))
 (block
  ;; LABEL: for (int i = 0,int j = 0;(i < 10);(i = (i + 1)),(j = (j + 1))) {
  ;;@ forstatement/ForStatement.java:38:4
  (local.set $i (i32.const 0))
  (local.set $j (i32.const 0))
  (block $LABEL.BREAK
   (loop
    (br_if 1 (i32.eqz (i32.lt_s (local.get $i) (i32.const 10))))
    (block $LABEL.CONTINUE
     (block
      ;; if ((i == 5)) {
      ;;@ forstatement/ForStatement.java:40:6
      (if (i32.eq (local.get $i) (i32.const 5))
       (then
        (block
         ;; continue LABEL;
         ;;@ forstatement/ForStatement.java:41:8
         (br $LABEL.CONTINUE)
        )
       )
      )
      ;; LOOP: for (int k = 0,int l = 0;(k < 10);(k = (k + 1)),(l = (l + 1))) {
      ;;@ forstatement/ForStatement.java:43:6
      (local.set $k (i32.const 0))
      (local.set $l (i32.const 0))
      (block $LOOP.BREAK
       (loop
        (br_if 1 (i32.eqz (i32.lt_s (local.get $k) (i32.const 10))))
        (block $LOOP.CONTINUE
         (block
          ;; if ((j == 5)) {
          ;;@ forstatement/ForStatement.java:44:8
          (if (i32.eq (local.get $j) (i32.const 5))
           (then
            (block
             ;; continue LABEL;
             ;;@ forstatement/ForStatement.java:45:10
             (br $LABEL.CONTINUE)
            )
           )
          )
         )
        )
        (local.set $k (i32.add (local.get $k) (i32.const 1)))
        (local.set $l (i32.add (local.get $l) (i32.const 1)))
        (br 0)
        
       )
      )
     )
    )
    (local.set $i (i32.add (local.get $i) (i32.const 1)))
    (local.set $j (i32.add (local.get $j) (i32.const 1)))
    (br 0)
    
   )
  )
 )
)
(elem declare func $m_testContinue__void@forstatement.ForStatement)

;;; void ForStatement.testInitializeInForCondition()
(func $m_testInitializeInForCondition__void@forstatement.ForStatement
 (type $function.m_testInitializeInForCondition__void)
 (param $this.untyped (ref $java.lang.Object))
 ;;@ forstatement/ForStatement.java:51:14
 (local $i i32)
 (local $x i32)
 (local $y i32)
 (local $this (ref null $forstatement.ForStatement))
 (local.set $this (ref.cast_static $forstatement.ForStatement (local.get $this.untyped)))
 (block
  ;; LOOP: for (int i = 0,int x;((i < 1)) ? ((((x = 3),x) != 0)) : (false);(i = (i + 1))) {
  ;;@ forstatement/ForStatement.java:52:4
  (local.set $i (i32.const 0))
  (block $LOOP.BREAK
   (loop
    (br_if 1 (i32.eqz (if (result i32) (i32.lt_s (local.get $i) (i32.const 1)) (then (i32.ne (block (result i32)
     (local.set $x (i32.const 3))
     (local.get $x)
    ) (i32.const 0))) (else (i32.const 0)))))
    (block $LOOP.CONTINUE
     (block
      ;; int y;
      ;;@ forstatement/ForStatement.java:53:6
      
      ;; (y = (i + x));
      ;;@ forstatement/ForStatement.java:54:6
      (local.set $y (i32.add (local.get $i) (local.get $x)))
     )
    )
    (local.set $i (i32.add (local.get $i) (i32.const 1)))
    (br 0)
    
   )
  )
 )
)
(elem declare func $m_testInitializeInForCondition__void@forstatement.ForStatement)

;;; int ForStatement.returnsValue()
(func $m_returnsValue__int@forstatement.ForStatement
 (result i32)
 ;;@ forstatement/ForStatement.java:58:21
 (block
  ;; return 1;
  ;;@ forstatement/ForStatement.java:59:4
  (return (i32.const 1))
 )
)

;;; void ForStatement.$clinit()
(func $$clinit__void@forstatement.ForStatement
 ;;@ forstatement/ForStatement.java:18:13
 (block
  ;; if (forstatement.ForStatement.$initialized) return;
  ;;@ forstatement/ForStatement.java:18:13
  (if (global.get $f_$initialized__forstatement_ForStatement)
   (then
    ;; return;
    ;;@ forstatement/ForStatement.java:18:13
    (return )
   )
  )
  ;; (forstatement.ForStatement.$initialized = true);
  ;;@ forstatement/ForStatement.java:18:13
  (global.set $f_$initialized__forstatement_ForStatement (i32.const 1))
  ;; java.lang.Object.$clinit();
  ;;@ forstatement/ForStatement.java:18:13
  (call $$clinit__void@java.lang.Object )
 )
)

;;; Class<?> ForStatement.getClass()
(func $m_getClass__java_lang_Class@forstatement.ForStatement
 (type $function.m_getClass__java_lang_Class)
 (param $this.untyped (ref $java.lang.Object))
 (result (ref null $java.lang.Class))
 (local $this (ref null $forstatement.ForStatement))
 (local.set $this (ref.cast_static $forstatement.ForStatement (local.get $this.untyped)))
 (block
  ;; return javaemul.internal.ClassLiteralPool.$getForstatement.ForStatement();
  (return (call $function.no.side.effects.$getForstatement.ForStatement__java_lang_Class (ref.func $$getForstatement.ForStatement__java_lang_Class@javaemul.internal.ClassLiteralPool) ))
 )
)
(elem declare func $m_getClass__java_lang_Class@forstatement.ForStatement)
